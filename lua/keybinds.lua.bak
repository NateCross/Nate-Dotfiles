-- Aliasing the keybind command
local map = function(key)
  -- get the extra options
  local opts = {noremap = true}
  for i, v in pairs(key) do
    if type(i) == 'string' then opts[i] = v end
  end

  -- basic support for buffer-scoped keybindings
  local buffer = opts.buffer
  opts.buffer = nil

  if buffer then
    vim.api.nvim_buf_set_keymap(0, key[1], key[2], key[3], opts)
  else
    vim.api.nvim_set_keymap(key[1], key[2], key[3], opts)
  end
end

-- //////////////////
-- /// HOW TO USE ///
-- //////////////////
-- map {'n', '<Leader>w', ':write<CR>'}

-- For recursive
-- map {'n', '<Leader>e', '%', noremap = false}

-- Taken from https://vonheikemen.github.io/devlog/tools/configuring-neovim-using-lua/


-- //////////////////
-- ///   CONFIG   ///
-- //////////////////

-- Leader as ; so it's easier to reach
vim.g.mapleader = ';'

-- Escape insert/visual mode
map{'i', 'ii', '<Esc>'}
map{'i', 'jk', '<Esc>'}
map{'i', 'kj', '<Esc>'}
map{'i', 'hj', '<Esc>'}
map('v', 'ii', '<Esc>')